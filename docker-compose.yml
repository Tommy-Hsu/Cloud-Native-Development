version: "3.9"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: chilltan_frontend
    ports:
      - 3000:3000
    container_name: frontend
    networks:
      - ChillTan
    depends_on:
      # - db-endpoints-server
      - create-join-group-server
      # - mongo_one
  
  # db-endpoints-server:
  #   build:
  #     context: ./backend/db-endpoints-server
  #     dockerfile: Dockerfile
  #   ports:
  #     - 5000:5000
  #   container_name: db-endpoints-server
  #   networks:
  #     - ChillTan
    # depends_on:
    #   - mongo_one

  create-join-group-server:
    build:
      context: ./backend/create-join-group-server
      dockerfile: Dockerfile
    image: create-join-group-server:latest
    env_file:
      - ./backend/create-join-group-server/.env
    networks:
      - ChillTan
    ports:
      - 8080:5000
    deploy:
      replicas: 2
  
  user-signupin-server:
    build: 
      context: ./backend/user-signupin-server
      dockerfile: Dockerfile
    image: user-signupin-server:latest
    ports:
      - 7777:5000
    container_name: user-signupin-server
    networks:
      - ChillTan
  
  event-search:
    build:
      context: backend/event-search
      dockerfile: Dockerfile
    image: event-search:latest
    container_name: event-search
    networks:
      - ChillTan
    ports:
      - 5001:5000

  prometheus:
    build:
      context: backend/monitor/prometheus
      dockerfile: Dockerfile
    image: prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      # - backend/monitor/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./backend/monitor/prometheus/prometheus_data:/prometheus
    networks:
      - ChillTan
    ports:
      - 9090:9090

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    restart: unless-stopped
    networks:
      - ChillTan
    ports:
      - 9100:9100

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    privileged: true
    volumes:
      - /etc/machine-id:/etc/machine-id:ro
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - ChillTan
    ports:
      - 8081:8080

  grafana:
    build:
      context: backend/monitor/grafana
      dockerfile: Dockerfile
    image: grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    depends_on:
      - prometheus
      - node-exporter
      - cadvisor
    networks:
      - ChillTan
    ports:
      - "3030:3000"

networks:
  ChillTan:
    name: ChillTanNet
    driver: overlay

  # mongo_one:
  #   image: mongo
  #   container_name: mongodb
  #   ports:
  #     - 27017:27017
  #   networks:
  #     - ChillTan
  #   restart: always
    # env_file:
    #   - ./backend/mongo/mongo-variables.env
    # command: mongod --replSet mongo-set      
    # volumes:
    #   - ./backend/mongo/data/mongo-1:/data/db

  # mongo_two:
  #   image: mongo
  #   container_name: mongo2
  #   ports:
  #     - 30002:27017
  #   networks:
  #     - ChillTan
  #   restart: always
  #   command: mongod --replSet mongo-set
  #   volumes:
  #     - ./backend/mongo/data/mongo-2:/data/db

  # mongo_three:
  #   image: mongo
  #   container_name: mongo3
  #   ports:
  #     - 30003:27017
  #   networks:
  #     - ChillTan
  #   restart: always
  #   command: mongod --replSet mongo-set
  #   volumes:
  #     - ./backend/mongo/data/mongo-3:/data/db

  # mongo_creater:
  #   image: mongo
  #   container_name: mongo_creater
  #   entrypoint: ["mongosh","--host","mongo1","--port","27017","--eval", 'rs.initiate( { _id : "mongo-set",members: [{ _id: 0, host: "mongo1:27017" },{ _id: 1, host: "mongo2:27017" },{ _id: 2, host: "mongo3:27017" }   ]})']
  #   depends_on:
  #     - mongo_one
  #     - mongo_two
  #     - mongo_three

  # mongo-express:
  #   image: mongo-express
  #   container_name: mongo-express
  #   # env_file:
  #   #   - ./backend/mongo/mongo-express-variables.env
  #   environment:
  #     - ME_CONFIG_MONGODB_URL=mongodb://mongodb:27017/
  #   restart: always
  #   depends_on:
  #     - mongo_one
  #   ports:
  #     - 8081:8081
  #   networks:
  #     - ChillTan